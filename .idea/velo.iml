<?xml version="1.0" encoding="UTF-8"?>
<module type="RUBY_MODULE" version="4">
  <component name="ModuleRunConfigurationManager">
    <shared />
  </component>
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/features" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/spec" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
    </content>
    <orderEntry type="jdk" jdkName="ruby-2.7.7-p221" jdkType="RUBY_SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="module-library">
      <library name="cuboid (v[path]) [path][gem]" type="rubylib">
        <properties>
          <option name="version" value="4" />
        </properties>
        <CLASSES>
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/lib" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.git" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/logs" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/spec" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.idea" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/config" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/reports" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/examples" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/profiles" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/snapshots" />
        </CLASSES>
        <JAVADOC />
        <SOURCES>
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/lib" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.git" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/logs" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/spec" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.idea" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/config" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/reports" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/examples" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/profiles" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/snapshots" />
        </SOURCES>
        <excluded>
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.git" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/logs" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/spec" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/.idea" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/reports" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/examples" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/profiles" />
          <root url="file://$MODULE_DIR$/../../qadron/cuboid/snapshots" />
        </excluded>
      </library>
    </orderEntry>
    <orderEntry type="library" scope="PROVIDED" name="awesome_print (v1.6.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bundler (v2.4.13, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="command_mapper (v0.3.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="concurrent-ruby (v1.1.8, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="concurrent-ruby-ext (v1.1.8, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ffi (v1.15.5, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="msgpack (v1.1.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="multi_json (v1.15.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mustermann (v1.1.2, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nio4r (v2.5.9, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nokogiri (v1.15.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="racc (v1.6.2, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack (v2.2.3.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-protection (v2.2.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-test (v2.1.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rake (v13.0.6, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="raktr (v0.0.3, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ruby-nmap (v1.0.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ruby2_keywords (v0.0.5, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubyzip (v2.3.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sinatra (v2.2.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sinatra-contrib (v2.2.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sys-proctable (v1.1.5, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="tilt (v2.1.0, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="toq (v0.0.4.1, ruby-2.7.7-p221) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="vmstat (v2.3.0, ruby-2.7.7-p221) [gem]" level="application" />
  </component>
  <component name="RakeTasksCache">
    <option name="myRootTask">
      <RakeTaskImpl id="rake" />
    </option>
  </component>
</module>